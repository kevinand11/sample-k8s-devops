name: CI/CD

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: 'dev'
        description: The environment to deploy to
        type: choice
        options:
          - dev
  push:
    tags:
      - 'v*.*.*' # e.g. v1.2.3, v1.2.3-env

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.setenv.outputs.env }}
      tag: ${{ steps.setenv.outputs.tag }}
    steps:
      - name: Determine ENV and TAG
        id: setenv
        run: |
          EVENT_NAME="${{ github.event_name }}"

          if [[ "$EVENT_NAME" == "workflow_dispatch" ]]; then
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-8)
            echo "env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
            echo "tag=${SHORT_SHA}" >> $GITHUB_OUTPUT

          elif [[ "$EVENT_NAME" == "push" ]]; then
            RAW_TAG="${{ github.ref_name }}"
            STRIPPED_TAG="${RAW_TAG#v}"
            ENV_SUFFIX=$(echo "$STRIPPED_TAG" | cut -d '-' -f2)
            ENV=${ENV_SUFFIX:-prod}

            echo "env=$ENV" >> $GITHUB_OUTPUT
            echo "tag=$STRIPPED_TAG" >> $GITHUB_OUTPUT
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    environment: ${{ needs.setup.outputs.env }}
    env:
      ENVIRONMENT: ${{ needs.setup.outputs.env }}
      IMAGES_TAG: ${{ needs.setup.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: '22.x'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

      - name: Demo
        run: |
          echo Env = ${{ env.ENV }}
          echo Tag = ${{ env.TAG }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build devops app
        run: pnpm -w build

      - name: Setup Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.11.2
        with:
          setup-tools: |
            kubectl
            helm
          kubectl: '1.32.2'
          helm: '3.17.3'

      - name: Authorize Kubectl
        uses: azure/k8s-set-context@v4.0.1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - run: |
          kubectl get ns

      - name: Deploy devops app
        run: pnpm -w k8s build # change to deploy --include devops